# # PHP CircleCI 2.0 configuration file
# #
# # Check https://circleci.com/docs/2.0/language-php/ for more details
# #
# version: 2
# jobs:
#   build:
#     docker:
#       # Specify the version you desire here
#       - image: circleci/php:7.3-node-browsers
#       - image: circleci/mysql:5.7
#       # Specify service dependencies here if necessary
#       # CircleCI maintains a library of pre-built images
#       # documented at https://circleci.com/docs/2.0/circleci-images/
#       # Using the RAM variation mitigates I/O contention
#       # for database intensive operations.
#       # - image: circleci/mysql:5.7-ram
#       #
#       # - image: redis:2.8.19
#     environment:
#       - APP_DEBUG: true
#       - APP_ENV: testing
#       - APP_KEY: base64:Y8nMmWw0Z9EixnIgVA9xtvwuFc2Qde6ukS70Z2VOp7s=
#       - DB_CONNECTION: circle_test
#       - MYSQL_ALLOW_EMPTY_PASSWORD: true
#     working_directory: ~/repo
#     steps:
#       - checkout
#     # Install PHP Extension
#       - run: sudo docker-php-ext-install pdo_mysql
#       # Download and cache dependencies
#       - restore_cache:
#           keys:
#             # "composer.lock" can be used if it is committed to the repo
#             - v1-dependencies-{{ checksum "composer.json" }}
#             # fallback to using the latest cache if no exact match is found
#             - v1-dependencies-
#       - run: composer install -n --prefer-dist
#       - save_cache:
#           key: v1-dependencies-{{ checksum "composer.json" }}
#           paths:
#             - ./vendor
#       - restore_cache:
#           keys:
#             - node-v1-{{ checksum "package.json" }}
#             - node-v1-
#       - run: yarn install
#       - save_cache:
#           key: node-v1-{{ checksum "package.json" }}
#           paths:
#             - node_modules
#       # run seeding
#       - run: php artisan migrate
#       - run: php artisan db:seed
#       # run tests!
#       - run: php ./vendor/bin/phpunit
